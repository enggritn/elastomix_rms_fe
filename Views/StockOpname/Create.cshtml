@{
    ViewBag.Title = "Stock Opname";
    ViewBag.Module = "StockOpname";
}

<div class="page-header">
    <div class="row align-items-end">
        <div class="col-lg-8">
            <div class="page-header-title">
                <i class="ik ik-inbox bg-blue"></i>
                <div class="d-inline">
                    <h5>@ViewBag.Title</h5>
                    <span>Create</span>
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <nav class="breadcrumb-container" aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item">
                        <a href=""><i class="ik ik-database"></i></a>
                    </li>
                    <li class="breadcrumb-item">
                        <a href="#">Logistic</a>
                    </li>
                    <li class="breadcrumb-item active" aria-current="page">Create @ViewBag.Title</li>
                </ol>
            </nav>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-body">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="form-group row">
                            <label class="col-form-label col-sm-4">Warehouse</label>
                            <div class="col-sm-4">
                                <select id="WarehouseCode" class="form-control">
                                    <option value="" selected>Select Warehouse</option>
                                </select>
                                <span class="help-block text-danger" id="error_warehouse"></span>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-form-label col-sm-4">Remarks</label>
                            <div class="col-sm-6">
                                <input type="text" autocomplete="off" class="form-control" id="Remarks" />
                                <span class="help-block text-danger"></span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-footer">
                <button type="button" class="btn btn-outline-info float-left" id="btnBack"><i class="ik ik-arrow-left"></i>Back</button>
                <div class="float-right">
                    <button type="button" class="btn btn-primary" id="btnSave"><i class="ik ik-save"></i>Save</button>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="modal" id="saveModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmationModalTitle">Save Data</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Are you sure ?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal"><i class="ik ik-x-circle"></i>No</button>
                <button type="button" class="btn btn-success" id="btnYes"><i class="ik ik-check-circle"></i>Yes</button>
            </div>
        </div>
    </div>
</div>



@section custom_css
{
    @Styles.Render("~/Content/plugins/toastr/toastr.css")
    @Styles.Render("~/Content/plugins/select2/dist/css/select2.min.css")
}

@section custom_js
{
    @Scripts.Render("~/Content/plugins/toastr/toastr.min.js")
    @Scripts.Render("~/Content/custom/js/notification.js")
    @Scripts.Render("~/Content/plugins/select2/dist/js/select2.min.js")

    <script type="text/javascript">

        let server = '@ViewBag.server';
        var isValid = true;
        let token = '@Session["token"].ToString()';

    $('#btnBack').click(function () {
        window.location.replace('@Url.Action("Index", "StockOpname")')
    });
        setWarehouseList();

        function setWarehouseList() {
            $('#WarehouseCode').select2();
            $.ajax({
                type: 'GET',
                async: false,
                dataType: "json",
                beforeSend: function (request) {
                    request.setRequestHeader('Token', token);
                },
                url: server + 'Api/Warehouse/GetDataEmix',
                success: function (response) {
                    isValid = response.status;
                    if (isValid) {
                        $('#WarehouseCode').empty();
                        $('#WarehouseCode').append('<option value="ALL">All Warehouse</option>');
                        var html = '';
                        $.each(response.list, function (index, value) {
                            html += '<option value="' + value.Code + '">' + value.Code + ' - ' + value.Name + '</option>';
                        });
                        $('#WarehouseCode').append(html);
                        $('#WarehouseCode').select2({ width: '100%' });
                    }
                }
            });
        }


        $('#btnSave').click(function () {
            $('#saveModal').modal('show');
        });

    $('#btnYes').click(function () {
        $('#btnSave').prop('disabled', true);
            $.ajax({
                type: 'POST',
                dataType: "json",
                beforeSend: function (request) {
                    request.setRequestHeader('Token', token);
                },
                url: server + 'Api/StockOpname/Create',
                data: {
                    WarehouseCode: $('#WarehouseCode').val(),
                    Remarks: $('#Remarks').val()
                },
                success: function (response) {
                    isValid = response.status;
                    if (!isValid) {
                        $.each(response.error_validation, function (index, value) {
                            if (value.FieldName == 'WarehouseCode') {
                                $('#error_warehouse').html(value.ErrorMessage);
                            } else {
                                $('#' + value.FieldName).next().html(value.ErrorMessage);
                                $('#' + value.FieldName).addClass('is-invalid');
                            }

                        });

                        notify("Warning", "warning", response.message);

                    } else {
                        notify("Success", "success", response.message);
                        setTimeout(function () {  window.location.replace('@ViewBag.BaseUrl/StockOpname/Detail?id=' + response.id); }, 1000);
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    notify("Error", "error", "Oops! Something went wrong.");
                },
                complete: function () {
                    $('#saveModal').modal('hide');
                    $('#btnSave').prop('disabled', false);
                }

            });
        });


        function dissmissDialog() {
            $('#saveModal').modal('hide');
        }

    </script>
}