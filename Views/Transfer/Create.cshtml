@{
    ViewBag.Title = "Transform";
    ViewBag.Module = "Transfer";
}

@section custom_css {
    @Styles.Render("~/Content/plugins/select2/dist/css/select2.min.css")
}

<div class="page-header">
    <div class="row align-items-end">
        <div class="col-lg-8">
            <div class="page-header-title">
                <i class="ik ik-user bg-blue"></i>
                <div class="d-inline">
                    <h5>@ViewBag.Title</h5>
                    <span>Form Input</span>
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <nav class="breadcrumb-container" aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item">
                        <a href=""><i class="ik ik-database"></i></a>
                    </li>
                    <li class="breadcrumb-item">
                        <a href="#">Logistic</a>
                    </li>
                    <li class="breadcrumb-item active" aria-current="page">@ViewBag.Title</li>
                </ol>
            </nav>
        </div>
    </div>
</div>


<div id="app" class="row">


    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <div class="col-md-10">
                    <div class="form-group row">
                        <label class="col-form-label col-sm-2">Date</label>
                        <div class="col-sm-4">
                            <input type="text" class="form-control datepicker" id="DateFilter" value="@DateTime.Now.ToString("dd/MM/yyyy")" readonly="" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-body" style="padding: 30px;">

                <div class="form-group row">
                    <label class="col-form-label col-sm-2">Source Item</label>
                    <div class="col-sm-3">
                        <select id="item-type-source" name="item-type-source" class="form-control">
                            <option value="">Select Type</option>
                            <option value="RM">Raw Material</option>
                            <option value="SFG">Semi Finish Good</option>
                        </select>
                    </div>
                    <div class="col-sm-5">
                        <select id="item-source" name="item-source" class="form-control" disabled>
                        </select>
                    </div>
                </div>


                <div class="form-group row">
                    <div class="col-sm-12">
                        <table id="table-item-stock" class="table table-sm table-bordered">
                            <thead class="thead-dark">
                                <tr>
                                    <th scope="col" style="width: 30px;">#</th>
                                    <th scope="col">Stock Code</th>
                                    <th scope="col">Warehouse</th>
                                    <th scope="col">Rack Area</th>
                                    <th scope="col">Rack Name</th>
                                    <th scope="col">Lot Number</th>
                                    <th scope="col" style="width: 100px;">QtyPerBag</th>
                                    <th scope="col" style="width: 100px;">Qty Stock</th>
                                    @*<th scope="col" style="width: 100px;">Qty Transfer</th>*@
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                </div>


                <div class="form-group row">
                    <label class="col-form-label col-sm-2">Target Item</label>
                    <div class="col-sm-3">
                        <select id="item-type-target" name="item-type-target" class="form-control">
                            <option>Select Type</option>
                            <option value="RM">Raw Material</option>
                            <option value="SFG">Semi Finish Good</option>
                        </select>
                    </div>
                    <div class="col-sm-5">
                        <select id="item-target" name="item-target" class="form-control" disabled>
                        </select>
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-form-label col-sm-2">Qty Stock Total</label>
                    <div class="col-sm-2">
                        <input type="number" id="QtyTotal" name="QtyTotal" class="form-control" readonly="" style="text-align: right;" />
                    </div>
                </div>


                <div class="form-group row">
                    <label class="col-form-label col-sm-2">Qty Transfer</label>
                    <div class="col-sm-2">
                        <input type="number" id="QtyTransfer" name="QtyTransfer" class="form-control" style="text-align: right;" />
                    </div>
                </div>

            </div>
            <div class="card-footer">
                <a href="@Url.Action("Index", "Transfer")" class="btn btn-secondary float-left"> Back To List</a>
                <button id="btn-transfer" type="button" class="btn btn-primary float-right"><i class="fa fa-file"></i> Save & Transfer</button>
            </div>
        </div>
    </div>

    <div class="modal" id="form-modal-items" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="confirmationModalTitle">Form List Item</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col">
                            <select v-model="form_search.Source" class="form-control">
                                <option value="">Select Source</option>
                                <option value="RM">Raw Material</option>
                                <option value="SFG">Semi Finish Good</option>
                            </select>
                        </div>
                        <div class="col">
                            <select v-model="form_search.BinRackAreaID" class="form-control">
                                <option>Select Area</option>
                            </select>
                        </div>
                        <div class="col">
                            <select v-model="form_search.BinRackID" class="form-control">
                                <option>Select Bin/Rack</option>
                            </select>
                        </div>
                        <div class="col">
                            <input type="text" v-model="form_search.Name" class="form-control" />
                        </div>
                        <div class="col">
                            <button type="button" v-on:click="searchItems" class="btn btn-xs btn-outline-primary">Search</button>
                        </div>
                    </div>

                    <hr />

                    <table class="table table-sm table-bordered table-striped nowrap" width="100%" cellspacing="0">
                        <thead class="thead-dark">
                            <tr>
                                <th>Barcode</th>
                                <th>MATERIAL CODE</th>
                                <th>MATERIAL NAME</th>
                                <th>AREA</th>
                                <th>RACK</th>
                                <th>QTY</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr v-for="(item, index) in items">
                                <td>{{ item.Barcode }}</td>
                                <td>{{ item.MaterialCode }}</td>
                                <td>{{ item.MaterialName }}</td>
                                <td>{{ item.BinRackArea }}</td>
                                <td>{{ item.BinRack }}</td>
                                <td>{{ item.Quantity }}</td>
                                <td>
                                    <button v-on:click="selectItem(item)" type="button" class="btn btn-xs btn-primary"><i class="fa fa-plus"></i></button>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal"><i class="ik ik-x-circle"></i>Close</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal" id="form-modal-target" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="confirmationModalTitle">Form List Item Target</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col">
                            <select v-model="form_search.Source" class="form-control">
                                <option value="">Select Source</option>
                                <option value="RM">Raw Material</option>
                                <option value="SFG">Semi Finish Good</option>
                            </select>
                        </div>
                        <div class="col">
                            <input type="text" v-model="form_search.Name" class="form-control" placeholder="search by name" />
                        </div>
                        <div class="col">
                            <button type="button" v-on:click="searchItemsTarget" class="btn btn-xs btn-outline-primary">Search</button>
                        </div>
                    </div>

                    <hr />

                    <table class="table table-sm table-bordered table-striped nowrap" width="100%" cellspacing="0">
                        <thead class="thead-dark">
                            <tr>
                                <th>MATERIAL CODE</th>
                                <th>MATERIAL NAME</th>
                                <th>QTY/Bag</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr v-for="(item, index) in itemsTarget">
                                <td>{{ item.MaterialCode }}</td>
                                <td>{{ item.MaterialName }}</td>
                                <td>{{ item.QtyPerBag }}</td>
                                <td>
                                    <button v-on:click="selectItemTarget(item)" type="button" class="btn btn-xs btn-primary"><i class="fa fa-plus"></i></button>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal"><i class="ik ik-x-circle"></i>Close</button>
                </div>
            </div>
        </div>
    </div>


</div>

@section custom_js
{
    @Scripts.Render("~/Content/plugins/select2/dist/js/select2.min.js")
    @Scripts.Render("~/Content/plugins/sweetalert.min.js")

    <script>
    let server = '@ViewBag.server';
    let module = '@ViewBag.Module';
    let token = '@Session["token"].ToString()';
    let url_list = '@Url.Action("Index", "Transfer")';
    let url_detail = '@Url.Action("Detail", "Transfer")';





    $('#table-item-stock').hide();

    $('#item-type-source').change(function () {
        var value = $(this).val();
        $("#table-item-stock tbody").empty();
        $('#item-source').val(null).trigger('change');
        $("#item-source").prop("disabled", true);

        if (value !== undefined && value !== null && value !== '') {
            $("#item-source").prop("disabled", false);
        }
    })

    function openStock(materialCode) {
        $.ajax({
            type: 'GET',
            dataType: 'json',
            beforeSend: function (request) {
                request.setRequestHeader('Token', TOKEN_USER);
            },
            url: URL_API + 'api/transfer/stocks?material-code=' + materialCode,
            success: function (data) {
                $("#table-item-stock tbody").empty();
                console.log(data);
                var QtyTotal = 0;
                var tbody = [];
                if (data !== undefined && data !== null && data.length > 0) {
                    var trTable = '';
                    for (var i = 0; i < data.length; i++) {
                        trTable = `
                            <tr class="table-secondary">
                                <td scope="row">
                                    ` + (i+1) + `
                                    <input type="hidden" class="table-id" value="` + data[i].ID + `" />
                                    <input type="hidden" class="table-bin-rack-area-code" value="` + data[i].BinRackAreaCode + `" />
                                    <input type="hidden" class="table-bin-rack-area-name" value="` + data[i].BinRackAreaName + `" />
                                    <input type="hidden" class="table-bin-rack-name" value="` + data[i].BinRackName + `" />
                                    <input type="hidden" class="table-lot-number" value="` + data[i].LotNumber + `" />
                                    <input type="hidden" class="table-qty" value="` + data[i].Qty + `" />
                                </td>
                                <td>` + data[i].StockCode + `</td>
                                <td>` + data[i].WarehouseName + `</td>
                                <td>` + data[i].BinRackAreaName + `</td>
                                <td>` + data[i].BinRackName + `</td>
                                <td>` + data[i].LotNumber + `</td>
                                <td style="text-align: right;">` + data[i].QtyPerBagStr + `</td>
                                <td style="text-align: right;">` + data[i].QtyStr + `</td>
                            </tr>
                        `;

                        tbody.push(trTable);
                        QtyTotal += data[i].Qty;
                    }
                } else {
                    tbody.push('<tr><td colspan="6">Stock Empty</td></tr>');
                }

                $('#QtyTotal').val((Math.round(QtyTotal * 100) / 100).toFixed(2));
                $("#table-item-stock tbody").append(tbody.join(''));
                //$('#table-item-stock').slideDown();
            }
        });
    }

    $('#item-source').select2({

        delay: 1000,
        minimumInputLength: 2,
        placeholder: 'Select Item Source',
        allowClear: true,
        ajax: {
            url: URL_API + 'api/transfer/products',
            dataType: 'json',
            data: function (params) {
                var query = {
                    search: params.term,
                    type: $('#item-type-source').val()
                }

                // Query parameters will be ?search=[term]&type=public
                return query;
            },
            processResults: function (data) {
                // Transforms the top-level key of the response object from 'items' to 'results'
                console.log(data);
                var list = [];
                for (var i = 0; i < data.length; i++) {
                    list.push({ id: data[i].id, text: data[i].text });
                }
                return {
                    results: list
                };
            }
            // Additional AJAX parameters go here; see the end of this chapter for the full code of this example
        }
    });

    $('#item-source').on('select2:select', function (e) {
        var data = e.params.data;
        console.log(data);
        openStock(data.id);
    });



        $('#item-type-target').change(function () {
            var value = $(this).val();
            $('#item-target').val(null).trigger('change');
            $("#item-target").prop("disabled", true);

            if (value !== undefined && value !== null && value !== '') {
                $("#item-target").prop("disabled", false);
            }
        })

        $('#item-target').select2({

            delay: 1000,
            minimumInputLength: 2,
            placeholder: 'Select Item Source',
            allowClear: true,
            ajax: {
                url: URL_API + 'api/transfer/products',
                dataType: 'json',
                data: function (params) {
                    var query = {
                        search: params.term,
                        type: $('#item-type-target').val(),
                        exclude: $('#item-source').val(),
                    }

                    // Query parameters will be ?search=[term]&type=public
                    return query;
                },
                processResults: function (data) {
                    // Transforms the top-level key of the response object from 'items' to 'results'
                    console.log(data);
                    var list = [];
                    for (var i = 0; i < data.length; i++) {
                        list.push({ id: data[i].id, text: data[i].text });
                    }
                    return {
                        results: list
                    };
                }
                // Additional AJAX parameters go here; see the end of this chapter for the full code of this example
            }
        });

    function getDataPost() {
        var model = {
            ItemSourceType: $('#item-type-source').val(),
            ItemSourceMaterialCode: $('#item-source').val(),
            ItemTargetType: $('#item-type-target').val(),
            ItemTargetMaterialCode: $('#item-target').val(),
            TotalTransfer: $('#QtyTransfer').val(),
            Stocks: []
        }

        var tbody = $('#table-item-stock tbody tr');
        for (var i = 0; i < tbody.length; i++) {
            var trTable = $(tbody[i]);

            var IDValue = trTable.find('.table-id').val();
            var BinRackAreaCodeValue = trTable.find('.table-bin-rack-area-code').val();
            var BinRackAreaNameValue = trTable.find('.table-bin-rack-area-name').val();
            var BinRackCodeValue = trTable.find('.table-bin-rack-code').val();
            var BinRackNameValue = trTable.find('.table-bin-rack-name').val();
            var LotNumberValue = trTable.find('.table-lot-number').val();
            var QtyValue = trTable.find('.table-qty').val();
            var QtyTransferValue = trTable.find('.table-qty-transfer').val();

            model.Stocks.push({
                ID: IDValue,
                BinRackAreaCode: BinRackAreaCodeValue,
                BinRackAreaName: BinRackAreaNameValue,
                BinRackCode: BinRackCodeValue,
                BinRackName: BinRackNameValue,
                LotNumber: LotNumberValue,
                Qty: QtyValue,
                QtyTransfer: QtyTransferValue
            })
        }

        console.log(model);
        return model;
    }


    $('#btn-transfer').click(function () {


        $.ajax({
            type: 'POST',
            dataType: "json",
            beforeSend: function (request) {
                request.setRequestHeader('Token', TOKEN_USER);
            },
            url: URL_API + 'api/transfer/save',
            data: getDataPost(),
            success: function (response) {

                swal((response.IsSuccess ? "Success " : "Warning ") + "Info", response.Message, response.IsSuccess ? "success":"error")
                    .then((value) => {
                        if (response.IsSuccess) {
                            window.location.href = url_detail + "/" + response.ResponseObject;
                        }
                });


            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                swal("Oops", textStatus, "error");
                console.log(textStatus);
                console.log(errorThrown);
            }

        });



    });

    </script>
}
